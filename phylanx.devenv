FROM fedora
RUN yum install -y gcc-c++ gcc make cmake git \
    bzip2 hwloc-devel blas blas-devel lapack lapack-devel boost-devel \
    libatomic which compat-openssl10 vim-enhanced wget zlib-devel \
    python3-flake8 gdb sudo python36 openmpi-devel

ARG CPUS
RUN ln -s /usr/lib64/openmpi/lib/libmpi_cxx.so /usr/lib64/openmpi/lib/libmpi_cxx.so.1
RUN ln -s /usr/lib64/openmpi/lib/libmpi.so /usr/lib64/openmpi/lib/libmpi.so.12
ENV PYVER 3.6.7
RUN wget https://www.python.org/ftp/python/${PYVER}/Python-${PYVER}.tgz
RUN tar xf Python-${PYVER}.tgz
WORKDIR /Python-${PYVER}
RUN dnf install -y openssl-devel
RUN ./configure
RUN make -j ${CPUS} install
RUN pip3 install --trusted-host pypi.org --trusted-host files.pythonhosted.org numpy tensorflow keras CNTK pytest
RUN pip3 install numpy tensorflow keras CNTK pytest
#RUN pip3 install tensorflow
#RUN pip3 install keras
#RUN pip3 install CNTK
WORKDIR /

RUN git clone https://github.com/STEllAR-GROUP/hpx.git && \
    mkdir -p /hpx/build && \
    cd /hpx/build && \
    cmake -DCMAKE_BUILD_TYPE=Debug \
      -DHPX_WITH_MALLOC=system \
      -DHPX_WITH_MORE_THAN_64_THREADS=ON \
      -DHPX_WITH_MAX_CPU_COUNT=80 \
      -DHPX_WITH_EXAMPLES=Off \
      .. && \
    make -j ${CPUS} install 

#RUN pip3 install pytest
RUN git clone --depth 1 https://github.com/pybind/pybind11.git && \
    mkdir -p /pybind11/build && \
    cd /pybind11/build && \
    cmake -DCMAKE_BUILD_TYPE=Debug -DPYBIND11_PYTHON_VERSION=${PYVER} .. && \
    make -j ${CPUS} install 

RUN git clone https://bitbucket.org/blaze-lib/blaze.git && \
    cd /blaze && \
    git checkout 48460a03c7ef989ea4c27b0f39dca91a76104099 && \
    mkdir -p /blaze/build && \
    cd /blaze/build && \
    cmake -DCMAKE_BUILD_TYPE=Debug -DBLAZE_SMP_THREADS=C++11 .. && \
    make -j ${CPUS} install

RUN git clone --depth 1 https://github.com/STEllAR-GROUP/blaze_tensor.git && \
    mkdir -p /blaze_tensor/build && \
    cd /blaze_tensor/build && \
    cmake -DCMAKE_BUILD_TYPE=Debug .. && \
    make -j ${CPUS} install 

COPY build.sh /usr/local/bin/build.sh
RUN chmod +x /usr/local/bin/build.sh

RUN echo "ALL            ALL = (ALL) NOPASSWD: ALL" >> /etc/sudoers
COPY phylanx.devenv /Dockerfile
RUN useradd -m jovyan
USER jovyan
WORKDIR /home/jovyan
ENV LD_LIBRARY_PATH /home/jovyan/install/phylanx/lib64:/usr/local/lib64:/home/jovyan/install/phylanx/lib/phylanx:/usr/lib64/openmpi/lib
COPY bash.sh /home/jovyan/.bashrc
CMD ["sleep","infinity"]
